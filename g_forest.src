// ////////////////////////////////////////////////////////////////////////////
// Forest region
// ////////////////////////////////////////////////////////////////////////////

// ////////////////////////////////////////////////////////////////////////////
// Major Characters
// ////////////////////////////////////////////////////////////////////////////

object theGnoll
    $article            "the "
    $name               "gnoll"
    $sex                sexMale
    $species            speciesGnoll
    $faction            0
    $rescued            0
;

object imp1
    $article            "a "
    $name               "tall male imp"
    $sex                sexMale
    $species            speciesHuman
    $faction            1
    $defeated           0
    $ai function() {
        // 1-in-3 chance of performing a whirlwind attack
//        0 2 random do-whirl jump-false

//        *_0 $faction get-property random-not-faction
//        *_0 2 act-thrust $combat-node get-property call
//        end

//        LABEL do-whirl
//        *_0 1
//        act-swing $combat-node get-property call
    }
;

object imp2
    $article            "a "
    $name               "fat male imp"
    $sex                sexMale
    $species            speciesHuman
    $faction            1
    $skills {
//        skl-melee 4;
    }
    $ai function() {
//        *_0 1 imp1 $ai getproperty call
    }
;

object imp3
    $article            "a "
    $name               "female imp"
    $sex                sexFemale
    $species            speciesHuman
    $faction            1
    $ai function() {
//        *_0 1 imp-1 $ai get-property call
    }
;

object enemySkeleton
    $article            "a "
    $name               "long-dead skeleton"
    $sex                sexNeuter
    $species            speciesHuman
    $faction            1
    $skills {
    }
    $ai function() {
//        *_0 $faction get-property random-not-faction
//        *_0 2 act-thrust $combat-node get-property call
    }
;


// ////////////////////////////////////////////////////////////////////////////
// Locations
// ////////////////////////////////////////////////////////////////////////////

object forestPath
    $location "On Forest Path"
    $body function() {
        ("You are on a path leading through a forest. The crumbling remains of a stone wall can be seen on one side, the words \"TOWN\" and a southward arrow has been painted on the wall. The wall partially hides an overgrown side trail.")
        (option "Go north into the forest" forestFork)
        (option "Go south to town"         townGate)
        (option "Take the overgrown trail" gnollCage)
        (option "Rest Awhile"              restAwhile)
    }
;

object townGate
    $location "Outside the Town Gates"
    $body function() {
        ("You stand before a gate built into the large, wooden pallisade that surronds the town. The gate is open, ready to admit you to the market bzzaar within.")
        (option "Head into town" inTown)
        (option "Return to the forest" forestPath)
    }
;

object gnollCage
    $location "By a Cage in the Forest"
    $body function() {
        ("You stand in a clearing in the forest. The area is dominated by a large, if rusty, cage.")
        (option "Return to the forest path" forestPath)

        (if (get theGnoll $rescued)
            (proc
                (" The cage stands empty and open.")
                (return)))

        (" Inside the cage you can see a rather emaciated gnoll.")
        (option "Open the cage" openCage)
        (option "Try to talk to the gnoll" talkToCagedGnoll)
    }
;

object talkToCagedGnoll
    $body function() {
        (addContinue)
        (if (get theGnoll $talkedToInCage)
            // has talked to gnoll before
            ("The gnoll continues to plead for help in a barely audible voice. \"The imps...\"")
            // first time talking
            (proc
                (setp theGnoll $talkedToInCage true)
                ("You can barely make out the gnoll's words; \"Help me, please! The imps, they have the key.\"")))
    }
;

object openCage
    $body function() {
        (addContinue)
        (if (lt (itemQty gnollCageKey) 1)
            (proc
                ("You rattle the door of the cage, but it is firmly locked.")
                (return)))

        ("Using the key you found you are able to open the cage; as you do, both the key and the lock turn to ash. As you open the door, the gnoll rushes out surprisingly fast given his state.\n\n\"Thank you!\" he says. \"Please, come see me in my home. I live to the north of the town.\"")
        (removeItems gnollCageKey 1)
        (setp theGnoll $rescued true)
    }
;

object forestFork
    $location "A Fork in the Path"
    $body function() {
        ("The forest path branches here. One fork leads northward, a faded sign labelling it as \"GNOLL HOME\". A northeast fork deeper into the forest, suitable for exploring what hides in the forest's shadowed reaches. To the south, the path leads back towards town. A western trail loop arounds to a discreet clearing hidden by dense brush.")

        (option "Take the north path"           outsideCabin)
        (option "Explore the forest"            forestEvent)
        (option "Check the discreet clearing"   discreetClearing)
        (option "Return to the south"           forestPath)
    }
;

object outsideCabin
    $location "A Cabin in the Forest"
    $body function() {
        ("A small cabin has been built here, nestled between the trees.")

        (if (get theGnoll $rescued)
            (" A trail of smoke can be seen curling up from the chimney; it appears someone is home!"))
        (option "Re-eneter the forest" forestFork)
        (option "Try to enter the cabin." enteringCabin)
    }
;


// ////////////////////////////////////////////////////////////////////////////
// The Villanous Imps
// ////////////////////////////////////////////////////////////////////////////

object discreetClearing
    $location "A Discreet Clearing"
    $body function() {
        (if (get imp1 $defeated)
            (proc
                ("This is a quiet clearing screen from view from the path by the brush. The remains of a campfire are visible in the centre. No one else is here; the only thing you can do is leave.")
            (option "Leave the clearing" forestFork)
            (return)))

        ("Three imps are gathered around a campfire, cackling and conversing. As you enter the clearing, they look up at you.\n\"An intruder! Get ")
        (sayPronoun thePlayer proObject)
        ("!\"\n")

        (if (random 0 2)
            (proc
                ("The sheer violence of the imps drives you back out of the clearing.")
                (option continueStr forestFork)
                (return)))

        (return mainImpFightAfter)
    //        main-imp-fight-after reset-combat
    //        imp-1 add-to-combat
    //        imp-2 add-to-combat
    //        imp-3 add-to-combat
    //        ret
    }
;

object gnollCageKey
    $article "a "
    $name "large key"
;

object mainImpFightAfter
    $body function() {

            // VICTORY
        (setp imp1 $defeated true)
        ("The imps lie unconscious around you, defeated. Scattered around the area, you find 200 gold and a large key.\n")
        (addItems gold 200)
        (addItems gnollCageKey 1)
        (addContinue)
        (asm
    //        combat-status 0 player-defeat jump-lt

            // DEFEAT
    //        LABEL player-defeat
    //        >"You fall, defeated. You awaken some time later back in the forest.\n"
    //        forest-fork add-continue
        )
    }
;


// ////////////////////////////////////////////////////////////////////////////
// The Gnoll's Cabin
// ////////////////////////////////////////////////////////////////////////////

object enteringCabin
    $body function() {
        (if (get theGnoll $rescued)
            (proc
                ("You hear the voice of the gnoll call out from inside. \"Come on in!\"\n")
                (return insideCabin)))

        ("Try as you might, the door is quite secure.")
        (addContinue)
        (asm
    }
;

object insideCabin
    $location "Inside the Gnoll's Cabin"
    $body function() {
        ("The interior of the cabin is crampt, but cozy. You can see the gnoll slotched back on a wooden chair, a mug of some dark liquid in his hand.")
        (if (get world $newLocation) ("\n\"Good to see you again, my rescuer!\" he says as you enter."))
        (option "Talk to the gnoll" gnollCabinTalk)
        (option "Leave"             outsideCabin)
    }
;

object gnollCabinTalk
    $body function() {
        (print "You have a nice chat with the gnoll.")
        (addContinue)
    }
;


// ////////////////////////////////////////////////////////////////////////////
// Forest Random Events
// ////////////////////////////////////////////////////////////////////////////

object forestEvent
    $events [
        forestEventSkeleton
        forestEventNothing
    ]
    $body function() {
        (return (get_random (get self $events)))
    }
;

object forestEventSkeleton
    //$count { 1 }
    $body function() {
        ("You discover a menacing looking skeleton loitering around a grave. It stares at you with empty eye-sockets for a moment then charges with a soundless cry.")

        ("\nThen vanishes as combat isn't implemented.")
        (return forestEventSkeletonAfter)
//        forest-event-skeleton-after reset-combat
//        enemy-skeleton add-to-combat)
    }
;
object forestEventSkeletonAfter
    $body function() {
        (asm
        0 addContinue call
//        combat-status 0 playerdefeat jump-lt

        // VICTORY
//        _5 0 20 random store
//        gold *_5 add-items
        "\nYou have won the battle!" say
//        *_5 no-reward jump-false
//        >" You found " *_5 say-number >" gold pieces!"
//        LABEL no-reward
        "\n" say
        ret

        playerdefeat:
        "You have been defeated and wake some time later alone in the forest.\n" say)
    }
;

object forestEventNothing
    $count function() { (return 3) }
    $body function() {
        (print "You stumble around in the forest for a while, but eventually end up back were you started without finding anything.")
        (addContinue)
    }
;
